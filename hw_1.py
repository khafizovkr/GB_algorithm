import string

# 1. Найти сумму и произведение цифр трехзначного числа, которое вводит пользователь.

users_number = input('Введите трехзначное число: ')
print(f'Сумма трехзначного числа равна {int(users_number[0]) + int(users_number[1]) + int(users_number[2])}')
print(f'Произведение трехзначного числа равна {int(users_number[0]) * int(users_number[1]) * int(users_number[2])}')

# 2. Выполнить логические побитовые операции "И", "ИЛИ" и др. над числами 5 и 6. Выполнить над числом 5 побитовый сдвиг
# вправо и влево на два знака.

print(bin(5), bin(6))

# Логическая операция "ИЛИ". При побитовом ИЛИ, сначала цифры переводятся в двоичную систему исчесления и сравниваются
# по битам. Для цифор 5 (101) и 6 (110) при операции ИЛИ получится число 111 в двоичной системе (1 или 1 будет равно 1,
# 0 или 1 будет равно 1, 1 или 0 будет равно 1) что равно 7.
print(5 | 6)

# Логическая операция "И". 1 и 1 будет равно 1, 0 и 1 будет равно 0, 1 и 0 будет равно 0, в итоге получится 100 в
# двоичной системе, т.е. 4 в десятичной системе.
print(5 & 6)

# Исключающее "ИЛИ". 1 и 1 будет равно 0, 0 и 1 будет равно 1, 1 и 0 будет равно 1, в итоге получится 11 в двоичной
# системе, т.е. 3 в десятичной.
print(5 ^ 6)

# Побитовый сдвиг вправо. В двоичной системе 5 равно 101, при сдвиге вправо на два разряда мы отбрасываем от 101
# последние две цифры и у нас остается 1, что в десятичной системе будет 1.
print(5 >> 2)

# Побитовый сдвиг влево. При сдвиге влево мы должны добавить два нуля и у нас получится 10100, что в десятичной системе
# будет равно 20.
print(5 << 2)

# 3. По введенным пользователем координатам двух точек вывести уравнение прямой вида y = kx + b, проходящей через эти
# точки.

x1 = int(input('Введите координату х для первой точки: '))
y1 = int(input('Введите координату у для первой точки: '))
x2 = int(input('Введите координату х для второй точки: '))
y2 = int(input('Введите координату у для второй точки: '))

print(f'Уравнение для прямой проходящей через эти две точки будет: y = {(k := (y2 - y1) / (x2 - x1))}x + {y1 - k * x1}')

# 4. Написать программу, которая генерирует в указанных пользователем границах
#       случайное целое число,
#       случайное вещественное число,
#       случайный символ.
# Для каждого из трех случаев пользователь задает свои границы диапазона. Например, если надо получить случайный символ
# от 'a' до 'f', то вводятся эти символы. Программа должна вывести на экран любой символ алфавита от 'a' до 'f'
# включительно.

rnd_int = input('Через пробел введите диапазон для случайного целого числа: ')
rnd_a_int = (int(str(property())[22:-1], 16) - 1000000000000)/2300000000000
rnd_float = input('Через пробел введите диапазон для случайного вещественного числа: ')
rnd_a_float = rnd_a_int ** 0.4
rnd_sym = input('Через пробел введите диапазон для случайного символа: ')
rnd_a_sym = rnd_a_int ** 0.5

print(f'Случайное целое число '
      f'{round((int(rnd_int.split()[1]) - int(rnd_int.split()[0])) * rnd_a_int + int(rnd_int.split()[0]))}')
print(f'Случайное вещественное число '
      f'{(float(rnd_float.split()[1]) - float(rnd_float.split()[0])) * rnd_a_float + float(rnd_float.split()[0])}')
print(f'Случайный символ '
      f'{chr(round((ord(rnd_sym.split()[1]) - ord(rnd_sym.split()[0])) * rnd_a_sym + ord(rnd_sym.split()[0])))}')

# 5. Пользователь вводит две буквы. Определить, на каких местах алфавита они стоят, и сколько между ними находится букв.

first_symbol = input('Введите первую букву: ')
second_symbol = input('Введите вторую букву: ')
print(f'Первая буква на {(first_index := string.ascii_lowercase.find(first_symbol) + 1)} месте алфавита')
print(f'Вторая буква на {(second_index := string.ascii_lowercase.find(second_symbol) + 1)} месте алфавита')
print(f'Между ними {abs(first_index - second_index - 1)} букв(ы)')

# 6. Пользователь вводит номер буквы в алфавите. Определить, какая это буква.

symbol_index = int(input('Введите номер буквы в алфавите (1-26): '))
print(f'Под номером {symbol_index} в алфавите находится буква {string.ascii_lowercase[symbol_index - 1]}')

# 7. По длинам трех отрезков, введенных пользователем, определить возможность существования треугольника, составленного
# из этих отрезков. Если такой треугольник существует, то определить, является ли он разносторонним, равнобедренным или
# равносторонним.

sides_length = input('Через пробел введите стороны трегольника: ').split()
sides_length_int = list(map(int, sides_length))
first_side = max(sides_length_int)
sides_length_int.remove(first_side)
if sum(sides_length_int) > first_side:
    print('Треугольник существует')
    if (sides_length_set := len(set(sides_length))) == 3:
        print('Треугольник разносторонний')
    elif sides_length_set == 2:
        print('Треугольник равнобедренный')
    else:
        print('Треугольник равносторонний')
else:
    print('Треугольник не существует')

# 8. Определить, является ли год, который ввел пользователем, високосным или не високосным.

year = int(input('Введите год для проверки високосный ли он '))
if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
    print('Год является високосным!')
else:
    print('Год не високосный!')

# 9. Вводятся три разных числа. Найти, какое из них является средним (больше одного, но меньше другого).
three_numbers = input('Ввдеите три числа через пробел: ').split()
three_numbers = list(map(int, three_numbers))
if three_numbers[0] < three_numbers[1] < three_numbers[2] or three_numbers[0] > three_numbers[1] > three_numbers[2]:
    print(three_numbers[1])
elif three_numbers[1] < three_numbers[2] < three_numbers[0] or three_numbers[1] > three_numbers[2] > three_numbers[0]:
    print(three_numbers[2])
else:
    print(three_numbers[0])
